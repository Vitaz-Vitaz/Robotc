#pragma config(Sensor, S1,     ,               sensorEV3_Color, modeEV3Color_Reflected_Raw)
#pragma config(Motor,  motorA,           ,             tmotorEV3_Large, openLoop, encoder)
#pragma config(Motor,  motorB,           ,             tmotorEV3_Large, openLoop, encoder)
#pragma config(Motor,  motorC,           ,             tmotorEV3_Large, openLoop, encoder)
#pragma config(Motor,  motorD,           ,             tmotorEV3_Large, openLoop, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


int colibrovka(float est){
	float minColor = 477;
	float maxColor = 660;
	return est/maxColor * (maxColor - minColor);
}
task main()
{
	float nado = 561;

	float est = 0;
	float raznost = 0;
	float k = 0.65;
	float lastEr = raznost;
	float u = 0;
	while(true){
		sleep(1);

		displayBigTextLine(1, "%d", SensorRaw[S1]);
	  est = SensorRaw[S1];
	  est = colibrovka(est);
		raznost = nado - est;
		u = raznost * k + (raznost - lastEr)* 8;
		motor[motorB] = 80 - u;
		motor[motorC] = 80 + u;
		lastEr = raznost;




		}

}
